import React, { useState, useEffect } from 'react'
import { Table, Button, Modal, Message } from 'antd'
import { get } from 'lodash'
import fetch from '@/services/axios'
import { EXAM_POINT_API, ADD_EXAM_POINT_API, DELETE_EXAM_POINT_API, DETAIL_EXAM_POINT_API } from './API'
import ModalData from './components/ExamPointDetail'
import ModalDetail from './components/DetailPoint'
import DeletePoint from './components/DeletePoint'
import './index.less'
// const {confirm} = Modal

export default ExamPoint => {
  const [PointData, setPointData] = useState([])
  const [AddVisible, setAddVisible] = useState(false)
  const [DetailVisible, setDetailVisible] = useState(false)
  const [PointInfo, setPointInfo] = useState([])
  const [PointParam, setPointParam] = useState({
    pageNumber: 1,
    pageSize: 10,
  })
  const columns = [
    {
      key: 'siteName',
      title: '考点名称',
      align: 'center',
      dataIndex: 'siteName'
    },
    {
      key: 'siteId',
      title: '考点编号',
      align: 'center',
      dataIndex: 'siteId'
    },
    {
      key: 'remarks',
      title: '备注',
      align: 'center',
      dataIndex: 'remarks',
      render: (remarks) => (<span>{!remarks ? '无' : remarks}</span>)
    },
    {
      title: '操作',
      key: 'action',
      align: 'center',
      render: (text, record, operation) => {
        return (
          <>
            <span className="examPoint-page-content-txt" onClick={() => DetailPoint(record)}>编辑</span>
            <span className="examPoint-page-content-f">|</span>
            <DeletePoint API={DELETE_EXAM_POINT_API} record={record} onReload={getPointList}>
              <span className="examPoint-page-content-txt">删除</span>
            </DeletePoint>
          </>
        );
      }
    }
  ];

  const getPointList = (Param = PointParam) => {//获取考点列表
    setPointParam(Param)
    fetch.post(EXAM_POINT_API, Param).then(res => {
      // console.log('kaodina', res)
      if (get(res, 'state') === 10000) {
        setPointData(res.data)
        localStorage.setItem('siteId', res.data.content[0].siteId || '')
      }
    })
  }
  useEffect(() => { //初加载列表
    getPointList(PointParam)
  }, [])

  const addPoint = () => {
    setAddVisible(true)
  }//打开模太框
  const handleCancel = () => {
    setAddVisible(false)
    setDetailVisible(false)
  }//关闭模太框
  const getAddPoint = (paramer) => {
    fetch.post(ADD_EXAM_POINT_API, paramer).then(res => {
      if (get(res, 'state') === 10000) {
        setAddVisible(false)
        getPointList(PointParam)
        Message.success(res.message)
      }
    })
  }

  //编辑考点
  const DetailPoint = (record) => {
    // console.log('具体',record)
    setDetailVisible(true)
    setPointInfo(record)
  }
  const handleDetail = (paramer) => {
    //   console.log('adadsas',paramer)
    fetch.post(DETAIL_EXAM_POINT_API, paramer).then(res => {
      if (get(res, 'state') === 10000) {
        Message.success(res.message)
        getPointList(PointParam)
        setDetailVisible(false)
      }
    })
  }
  return (
    <section className="examPoint-page">
      <section className="examPoint-page-header">
        <span className="examPoint-page-header-text">考点列表</span>
        <Button type="primary"  onClick={() => addPoint()}>添加</Button>
      </section>
      <section className="examPoint-page-content" >
        <Table columns={columns} dataSource={PointData.content} rowKey={record => record.siteId}
          pagination={{
            onChange: (current) => {
              // console.log('cishu', current)
              let pragrams = PointParam
              pragrams.pageNumber = current
              getPointList(pragrams)
            },
            total: PointData.totalElements,
            pageSize: 10,
          }}
        />
      </section>
      <section className="examPoint-page-footer">
        <Modal
          title="添加考点"
          visible={AddVisible}
          onCancel={handleCancel}
          footer={null}
          width="856px"
          className="examPoint-page-footer-addmodal"
        >
          <ModalData getAddPoint={getAddPoint} />
        </Modal>

        <Modal
          title="编辑考点"
          visible={DetailVisible}
          onCancel={handleCancel}
          footer={null}
          width="856px"
          className="examPoint-page-footer-addmodal"
        >
          <ModalDetail PointInfo={PointInfo} handleDetail={handleDetail} />
        </Modal>
      </section>
    </section>
  )
}