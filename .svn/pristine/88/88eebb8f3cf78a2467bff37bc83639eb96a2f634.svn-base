import React from 'react' 
import Form from '@/components/Form'
import Dialog, {withLazy} from '@/components/Dialog'
import {Select,Button,Row,} from 'antd'
// import Styles from './index.less'

const { Option } = Select
const Label = ({ title, children }) => {
  return (
    <Form.Item className="HeaderSearch-page-search-label">
      <label className="HeaderSearch-page-search-label-item">{title}：</label>
      <span className="HeaderSearch-page-search-label-span">{children}</span>
    </Form.Item>
  )
}
const WrapForm = props => {
  const { getFieldDecorator, validateFields } = props.form
    const {point,number} = props

   const changeEvent=(e)=>{//获取点击选择的考点
     const {getNumber} = props
      getNumber(e)
    }

    const handleSubmit = e => {
      const {handleOK} = props
      e.preventDefault();
      validateFields((err, values) => {
        if (!err) {
          // console.log('values', values)
          handleOK(values)
        }
      })
    }
    const reset = () => {//重置
      const { resetFields } = props.form   
      resetFields();
    }
    return (
      <Form onSubmit={handleSubmit}>
        <Row>
          <section>
          <Label title="考点">
              {getFieldDecorator('siteId',
                { initialValue: '' }
              )(<Select placeholder="请选择考点" onChange={(e)=>changeEvent(e)}>
                {point && point.map((item) => {
                  return <Option value={item.siteId} key={item.siteId}>{item.siteName}</Option>
                })}</Select>)
              }
            </Label>
            <Label title="考场">
              {getFieldDecorator('examNumberId',
                { initialValue: '' }
              )(<Select placeholder="请选择考场" onChange={(e)=>changeEvent(e)}>
                {number && number.map((item) => {
                  return <Option value={item.examNumberId} key={item.examNumberId}>{item.name}</Option>
                })}</Select>)
              }
            </Label>
          </section>
        </Row>
        <Row style={{textAlign:"center"}}>
          <Button type="dashed" style={{marginRight:"5px"}} onClick={reset}>重置</Button>
          <Button type="primary" htmlType="submit">确定</Button>
        </Row>
      </Form>
    )
  }
  const Wrap = Form.create()(WrapForm) // 外层嵌套
  
  const Export = props => {
    return (<Dialog title="数据导出" {...props}>
      <Wrap {...props}></Wrap>
    </Dialog>)
  }
  
  Export.defaultProps = {
    width: '500px'
  }
  
  export default withLazy(Export)