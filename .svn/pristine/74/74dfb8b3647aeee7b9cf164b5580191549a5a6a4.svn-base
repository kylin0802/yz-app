import React from 'react';
import { withRouter } from 'react-router-dom';
import { Form, Icon, Input, Button, message } from 'antd';
import fetch from '@/services/axios';
// import loginBg from './img/loginBg.png';
import md5 from 'md5'
import './index.less';
const LOGIN_API = '/yzSmartGate/manage/login'
const LOAD_PREFIX_API = '/yzSmartGate/common/loadDfsPrefix'
const POINT_API ='/yzSmartGate/manage/examSite/loadExamSiteList'
const Login = props => {
  const { getFieldDecorator } = props.form;
  const Logout = () => {
    const userName= localStorage.getItem('userName');
    fetch.post('/yzSmartGate/manage/logout',{userName}).then(res => {
      if(res.state === 10000) {
        localStorage.removeItem('userName');
      }
    })
  };
  const handleSubmit = async e => {
    e.preventDefault();
    // props.history.push('/')
    await props.form.validateFields((err, values) => {
      if (!err) {
        let {password, userName} = values
        let passwordMd5 = encodeURIComponent(md5(password))
        // console.log(values)
        fetch.post(LOGIN_API, {password:passwordMd5, userName}).then(({ state }) => {
          // console.log(success, modelVal)
          const localStorage = window.localStorage;
          localStorage.setItem('userName', userName);
          if (state === -1) {
            message.error('用户或密码错误，请重新输入...', 2);
          } else if(state === 10) {
            message.error('账户已被登入, 请尝试使用其他账户')
            Logout()
          } else {
           
            fetch(LOAD_PREFIX_API).then((data) => {
              localStorage.setItem('prefixPhoto', data.message);
              message.loading('登陆成功', 1).then(() => {
                fetch.post(POINT_API).then((res)=>{   
                  console.log('....',res.data)        
                  if(res.data.length===0){              
                    return props.history.push('/ExamPoint');
                    // return props.history.push('/');  
                  }else{                  
                    // localStorage.setItem('first', res.data[0].siteId)
                    return props.history.push('/')                
                    // return props.history.push('/ExamPoint');
                  }
                })         
              })
            })
          } 
        })
      }
    })
  }

  return (
    <div
      className="loginWrap"
      style={{
        width: '100%',
        height: '99.63vh'
      
      }}>
        <div className="fromWrap">
          <Form onSubmit={handleSubmit} className="login-form">
            <Form.Item className="username">
              {getFieldDecorator('userName', {
                rules: [{ required: true, message: '请输入您的用户名!' }]
              })(<Input prefix={<Icon type="user" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder="用户名" />)}
            </Form.Item>
            <Form.Item className="password">
              {getFieldDecorator('password', {
                rules: [{ required: true, message: '请输入您的密码' }]
              })(
                <Input
                  prefix={<Icon type="lock" style={{ color: 'rgba(0,0,0,.25)' }} />}
                  type="password"
                  placeholder="密码"
                />
              )}
            </Form.Item>
            <Form.Item>
              <Button block type="primary" htmlType="submit" className="login-form-button">
                登录
              </Button>
            </Form.Item>
          </Form>
        </div>
    </div>
  );
};

export default withRouter(Form.create({ name: 'normal_login' })(Login));
