import React from 'react'
import styles from './index.module.less'
import {Input,Button,Row,Form,Col} from 'antd'
import PropsTypes from 'prop-types'
import {uuid} from '@/utils/filter'

const Label = ({ title, children }) => {
  return (
    <Form.Item className="headerSearch-page-search-label">
      <label className="headerSearch-page-search-label-item">{title}：</label>
      <span className="headerSearch-page-search-label-span">{children}</span>
    </Form.Item>
  )
}
// let uuid = () => {
//   let s = [];
//   let hexDigits = "0123456789abcdef";
//   for (var i = 0; i < 36; i++) {
//       s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);
//   }
//   s[14] = "4"; // bits 12-15 of the time_hi_and_version field to 0010
//   s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1); // bits 6-7 of the clock_seq_hi_and_reserved to 01
//   s[8] = s[13] = s[18] = s[23] = "";

//   var uuid = s.join("");
//   return uuid;
// }

const ModalData =(props) =>{
  const { getFieldDecorator, validateFields } = props.form

 const handleSubmit = e =>{
  e.preventDefault();
  const { resetFields } = props.form 
  const {getAddPoint} = props
  validateFields((err, values) => {
    if (!err) {
      // console.log('values', values)
      let siteId = {
        'siteId':uuid(),
      }
      let paramer = Object.assign(values,siteId)
      // console.log('canshu ',paramer)
      getAddPoint(paramer)
    }
    resetFields(); 
  })
 }
 const reset = () => {//重置
  const { resetFields } = props.form   
  resetFields();
}
 return(
  <Form onSubmit={handleSubmit}>
     <Row>
         <Col span={12}>
          <Label title="考点">
              {getFieldDecorator('siteName',
               {        
                  rules: [{ required: true, message: '教室名称不能为空！' }],
                           
               }
              )(<Input className={styles.width}  placeholder='请输入考点名称'/>)
              }
            </Label>
          </Col>
          <Col span={12}>
            <Label title="备注">
              {getFieldDecorator('remarks',
                
              )(<Input className={styles.width} placeholder='请输入备注'/>)
              }
            </Label>
          </Col>
        </Row>
        <Row className={styles.textAlign}>
          <Button type="dashed" className={styles.marRight} onClick={reset}>重置</Button>
          <Button type="primary" htmlType="submit">确定</Button>
        </Row>
  </Form>
 )
}
ModalData.propTypes = {
  // GateList: PropsTypes.array.isRequired,
  getAddPoint:PropsTypes.func.isRequired
}
export default Form.create()(ModalData)