import React, { useEffect, useState, useMemo, useRef } from "react";
import { Row, Col } from "antd";
import classnames from "classnames";
import Styles from "./index.module.less";
import noFacePhoto from "@/images/noFacePhoto.jpg";
const CardItem = props => {
  const { cardItem } = props;
  const [onloadUrl, setonloadUrl] = useState("");
  const btnClass = classnames({
    [Styles.success]: cardItem.passResult !== "reject",
    [Styles.error]: cardItem.passResult === "reject"
  });
  const imgRef = useRef(null);

  useEffect(() => {
    let imageNode = cardItem.chlidNode || null;
    if (cardItem) {
      // console.log(cardItem.chlidNode);
      imgRef.current.appendChild(imageNode);
    }
    return () => {
      imgRef.current.removeChild(imageNode);
    };
  }, [JSON.stringify(cardItem)]);

  return (
    <>
      {/* {console.log(cardItem.chlidnode)} */}
      <section className={Styles.wrap}>
        <div className={Styles.left}>
          <span className={Styles.leftTitle}>现场照片</span>
          <img
            src={
              !cardItem.scenePhotoPath
                ? noFacePhoto
                : `${localStorage.getItem("prefixPhoto")}${
                    cardItem.scenePhotoPath
                  }`
            }
            alt="现场照片"
            className={Styles.leftImage}
          />
          <div className={Styles.leftCol}>
            <span className={Styles.leftColItem}>
              座位号： {cardItem.seatNo}
            </span>
          </div>
          <div className={Styles.leftCol}>
            <span className={Styles.leftColItem}>{cardItem.personId}</span>
          </div>
          <div className={Styles.leftCol}>
            <span className={Styles.leftColSpan}>
              相似度：{parseInt(cardItem.similarity * 100)} %
            </span>
            <span className={Styles.leftColItem}></span>
          </div>
        </div>
        <div className={Styles.right}>
          <span className={Styles.rightTitle}>当前照片</span>
          <div ref={imgRef}></div>
          {/* <img src={`/yzSmartGate/common/${cardItem.headPhotoPath}`} className={Styles.rightImage}  alt="比对照片" /> */}
          <div className={Styles.rightCol}>
            <span className={Styles.rightColItem}>{cardItem.name}</span>
          </div>
          <div className={Styles.rightCol}>
            <span className={btnClass}>
              {cardItem.passResult === "reject" ? "验证失败" : "验证成功"}
            </span>
          </div>
        </div>
      </section>
    </>
  );
};

const CardList = props => {
  const { cardList } = props;
  const [lazyList, setLazyList] = useState([]);

  function imageLazy(_param) {
    if(!!!_param.length) {
       setLazyList([])
       return 
    }
    const lazy = (item, index) => {
      return new Promise(resolve => {
        let obj = item
        const img = new Image();
        img.onload = function() {
          obj.chlidNode = img;
          resolve(obj);
        };
        img.onerror = function(err) {
          // 等下次加载问题再解决
          console.log(err)
          // reject(item)
        };
        img.src = `/yzSmartGate/common/${item.headPhotoPath}`;
        img.classList.add(Styles.rightImage);
      });
    };
    const load = async _param => {
      for (let item of _param) {
        await lazy(item);
      }
      return _param;
    };
    load(_param).then(_val => {
      // console.log(_val)
      setLazyList(_val)
    });
   
  }
  useEffect(() => {
    // console.log('更新')
    !!cardList && imageLazy(cardList)
  }, [JSON.stringify(cardList)]);
  return (
    <>
      {!!lazyList.length &&
        lazyList.map((cardItem, index) => (
          <CardItem cardItem={cardItem} key={index} />
        ))}
      {!!!lazyList.length && (
        <Row justify="center">
          <Col span={24}>暂无数据...</Col>
        </Row>
      )}
    </>
  );
};

export default CardList;
