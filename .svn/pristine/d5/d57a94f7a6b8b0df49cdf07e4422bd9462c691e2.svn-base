import React from 'react'
import styles from './index.module.less'
import {Input,Button,Row,Form,Col} from 'antd'
import PropsTypes from 'prop-types'

const Label = ({ title, children }) => {
  return (
    <Form.Item className="headerSearch-page-search-label">
      <label className="headerSearch-page-search-label-item">{title}：</label>
      <span className="headerSearch-page-search-label-span">{children}</span>
    </Form.Item>
  )
}

const ModalDetail =(props) =>{
  const { getFieldDecorator, validateFields } = props.form
  const {PointInfo} = props

 const handleSubmit = e =>{//确定
  const { resetFields } = props.form 
  const {handleDetail,PointInfo} = props
  validateFields((err, values) => {
    if (!err) {
      let siteId = {
        'siteId':PointInfo.siteId,
      }
      let paramer = Object.assign(values,siteId)
      handleDetail(paramer)
    }
    resetFields(); 
  })
 }
 const reset = () => {//重置
  const { resetFields } = props.form   
  resetFields();
}
 return(
  <Form onSubmit={handleSubmit}>
     <Row>
         <Col span={12}>
          <Label title="考点">
              {getFieldDecorator('siteName',
               {
                 initialValue: PointInfo.siteName,
                rules: [
                  {
                    required: true,
                    message: '考点名称'
                  }
                ]
               }
              )(<Input className={styles.width}/>)
              }
            </Label>
          </Col>
          <Col span={12}>
            <Label title="备注">
              {getFieldDecorator('remarks',
                {
                    initialValue: PointInfo.remarks ,
                }
              )(<Input className={styles.width}/>)
              }
            </Label>
          </Col>
        </Row>
        <Row className={styles.textAlign}>
          <Button type="dashed"  className={styles.marRight} onClick={reset}>重置</Button>
          <Button type="primary" htmlType="submit">确定</Button>
        </Row>
  </Form>
 )
}
ModalDetail.propTypes = {
  PointInfo: PropsTypes.array.isRequired,
  handleDetail:PropsTypes.func.isRequired
}
export default Form.create()(ModalDetail)