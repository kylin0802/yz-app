import React, { Fragment } from 'react'
import { Form, Select, Input, Button, DatePicker, Row } from 'antd'
import './index.less'
import moment from 'moment'
import 'moment/locale/zh-cn'
import { timeFormatFilter } from '@/utils/filter';
import locale from 'antd/es/date-picker/locale/zh_CN';

import PropsTypes from 'prop-types'
const { Option } = Select

const throughMode = [
  { label: '人脸比对通行', value: 'Face' },
  { label: '身份证比对通行', value: 'IDCard' }
]
const passResult = [
  { label: '通过', value: 'pass' },
  { label: '未通过', value: 'reject' }
]

const mydate = Date.parse(new Date());
const beginTime = (new Date(new Date(mydate).getTime()).setHours(0, 0, 0, 0))
const endTime = (new Date(new Date(mydate).getTime()).setHours(23, 59, 59, 59))

const Label = ({ title, children }) => {
  return (
    <Form.Item className="headerSearch-page-search-label">
      <label className="headerSearch-page-search-label-item">{title}：</label>
      <span className="headerSearch-page-search-label-span">{children}</span>
    </Form.Item>
  )
}

const HeaderSearch = (props) => {
  const { getFieldDecorator, validateFields } = props.form
  const { GateList, onHandleSearch } = props
  // console.log('shuju', GateList)
  const handleSubmit = e => {
    e.preventDefault();
    validateFields((err, values) => {
      if (!err) {
        // console.log('values', values)
        onHandleSearch(values)
      }
    })
  }
  //重置
  const reset = () => {
    const { resetFields, validateFields } = props.form
    const { onHandleSearch } = props
    resetFields();
    validateFields((err, record) => {
      //  console.log('record',record)
      onHandleSearch(record)
    })
  }
  return (
    <Fragment>
      <Form className="headerSearch-page-search" onSubmit={handleSubmit}>
        <Row>
          <section className="headerSearch-page-search-list">
            <Label title="通行设备">
              {getFieldDecorator('channelNO',
                { initialValue: '' }
              )(<Select placeholder="请选择通行设备">
                {GateList && GateList.map((item) => {
                  return <Option value={item.deviceNO} key={item.deviceNO}>{item.name}</Option>
                })}</Select>)
              }
            </Label>

            <Label title="通行方式">
              {getFieldDecorator('throughMode',
                { initialValue: '' }
              )(<Select placeholder="请选择通行方式">
                {throughMode.map((item) => {
                  return <Option value={item.value} key={item.value}>{item.label}</Option>
                })}</Select>)
              }
            </Label>

            <Label title="通行结果">
              {getFieldDecorator('passResult',
                { initialValue: '' }
              )(<Select placeholder="请选择通行结果">
                {passResult.map((item) => {
                  return <Option value={item.value} key={item.value}>{item.label}</Option>
                })}</Select>)
              }
            </Label>

            <Label title="通行时间">
              {getFieldDecorator('beginTime',
                { initialValue: moment(timeFormatFilter(beginTime)) }
              )(
                <DatePicker showTime locale={locale} style={{ "width": "147px" }} />
              )
              }
            </Label>

            <Label>
              {getFieldDecorator('endTime',
                { initialValue: moment(timeFormatFilter(endTime)) }
              )(
                <DatePicker showTime locale={locale} style={{ "width": "147px" }} />
              )
              }
            </Label>
          </section>

          <section className="headerSearch-page-search-buttons">
            <Button type="primary" htmlType="submit">
              查询
          </Button>
          </section>
        </Row>

        <Row>
          <section className="headerSearch-page-search-list">
            <Label title="考生姓名">
              {getFieldDecorator('name',
                { initialValue: '' }
              )(<Input />)
              }
            </Label>

            <Label title="准考证号">
              {getFieldDecorator('personId',
                { initialValue: '' }
              )(<Input />)
              }
            </Label>

          </section>
          <section className="headerSearch-page-search-buttons">
            <Button type="danger" onClick={reset}>
              重置
          </Button>
          </section>
        </Row>
      </Form>
    </Fragment>

  )
}
HeaderSearch.propTypes = {
  GateList: PropsTypes.array.isRequired,
  onHandleSearch:PropsTypes.func.isRequired
}
export default Form.create()(HeaderSearch);