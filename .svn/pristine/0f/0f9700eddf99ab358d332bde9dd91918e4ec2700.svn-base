import React, { useState, useEffect, useRef } from 'react'
import { Row, Col, Progress, Modal,Empty  } from 'antd'
import { timeFormatFilter } from '@/utils/filter'
import { get } from 'lodash'
import fetch from '@/services/axios';
import './index.less'
import ModalData from '../Modal'
import { STUDENT_INFO_API, PREFIX_API } from '../../apis'

const CardList = (props) => {
  const imgRef = useRef(null);
  const { DataInfo, commonUrl, } = props
  // console.log('woqu', DataInfo)
  const [visible, setVisible] = useState(false)
  const [ModalInfo, setModalInfo] = useState({})
  const [StudentInfo, setStudentInfo] = useState({})
  useEffect(() => {
    let imageNode = DataInfo.chlidNode || null;
    if (DataInfo) {
      // console.log(cardItem.chlidNode);
      imgRef.current.appendChild(imageNode);
    }
    return () => {
      imgRef.current.removeChild(imageNode);
    };
  }, [JSON.stringify(DataInfo)]);

  const imgShow = (item, index) => {//打开模太框
    setVisible(true)
    setModalInfo(item)
    // console.log('index', item.personId)
    const param = {
      examineeId: item.personId
    }
    getStudentInfo(param)
  }

  const getStudentInfo = (param) => {//查询某个考生的具体数据
    fetch.post(STUDENT_INFO_API, param).then(res => {
      if (get(res, 'state') === 10000) {
        setStudentInfo(res.data.content[0])
      }
    })
  }
  const handleCancel = () => {
    setVisible(false)
  }
  return (
    <div>
      <section className="cardContent-page-content" onClick={() => imgShow(DataInfo)}>
        <Row>
          <Col span={10} className="cardContent-page-content-left">
            <section className="cardContent-page-content-left-oldInfo">
              <span>现场照片</span>
              {/* <img src={commonUrl + item.facePhotoPath} alt="照片" style={{ objectFit: "cover" }} /> */}
              <img src={commonUrl + DataInfo.facePhotoPath} alt="照片" style={{ objectFit: "cover" }} />
            </section>
          </Col>
          <Col span={4} className="cardContent-page-content-middle">
            <span className="cardContent-page-content-middle-progress"> <Progress type="circle" percent={Number(parseFloat(DataInfo.similarity * 100).toFixed(1))} width={60} /></span>
            <section className="cardContent-page-content-middle-text">通过</section>
          </Col>
          <Col span={10} className="cardContent-page-content-right" >
            <section className="cardContent-page-content-right-newInfo">
              <span>{DataInfo.throughMode === "IDCard" ? '考生身份证照' : '考生照片'}</span>
              {/* <img src={DataInfo.throughMode === "IDCard" ? commonUrl + DataInfo.scenePhotoPath : "/yzSmartGate/common/" + DataInfo.headPhotoPath} onError={(e)=>{e.target.onerror = null;e.target.src=noFacePhoto}} alt="照片" style={{ objectFit: "cover" }} /> */}
              <div ref={imgRef}></div>
            </section>
          </Col>
        </Row>
        <Row className="cardContent-page-content-footer">
          <Col span={10} className="cardContent-page-content-footer-font">
            <Col span={24}>{DataInfo.name}</Col>
            <Col span={24}>{DataInfo.throughMode === "Face" ? "人脸比对" : DataInfo.throughMode === "IDCard" ? "身份证比对" : "暂无"}</Col>
            <Col span={24}>{DataInfo.direction === "in" ? "进闸" : "出闸"}</Col>
          </Col>
          <Col span={4}></Col>
          <Col span={10} className="cardContent-page-content-footer-font">
            <Col span={24}>{DataInfo.personId}</Col>
            <Col span={24}>{timeFormatFilter(DataInfo.occurTime * 1000)}</Col>
          </Col>
        </Row>

      </section>
      <Modal
        title="考生详情"
        visible={visible}
        onCancel={handleCancel}
        footer={null}
        width="893px"
      >
        <ModalData ModalInfo={ModalInfo} StudentInfo={StudentInfo} commonUrl={commonUrl} />
      </Modal>
    </div>
  )
}


const CardContent = (props) => {
  const { DataInfo } = props
  const [lazyList, setLazyList] = useState([]);
  const [commonUrl, setCommonUrl] = useState({})
  const getPrefix = () => {
    fetch.get(PREFIX_API).then(res => {
      // console.log('公共的路径', res.message)
      setCommonUrl(res.message)
    })
  }
  useEffect(() => {
    getPrefix()
  }, [])

  function imageLazy(_param) {
    // console.log('112', _param)
    if (!!!_param.length) {
      setLazyList([])
      return
    }
    const lazy = (item, index) => {
      // console.log('到底是什么', item)
      return new Promise(resolve => {
        let obj = item
        const img = new Image();
        img.onload = function () {
          obj.chlidNode = img;
          resolve(obj);
        };
        img.onerror = function (err) {
          // 等下次加载问题再解决
          console.log(err)
          // reject(item)
        };
        img.src = item.throughMode === "IDCard" ? commonUrl + item.scenePhotoPath : "/yzSmartGate/common/" + item.headPhotoPath;
      });
    };
    const load = async _param => {
      for (let item of _param) {
        await lazy(item);
      }
      return _param;
    };
    load(_param).then(_val => {
      // console.log('41', _val)
      setLazyList(_val)
    });

  }
  useEffect(() => {
    // console.log('更新')
    !!DataInfo && imageLazy(DataInfo)
  }, [JSON.stringify(DataInfo)]);

  return (
    <section className="cardContent-page">
      {!!lazyList.length &&
        lazyList.map((DataInfo, index) => (
          <CardList DataInfo={DataInfo} key={index} commonUrl={commonUrl} />
        ))}
      {!!!lazyList.length && (
        <section className="cardContent-page-empty">今日暂无数据...</section>
        // <Empty />
      )}
    </section>
  )
}
export default CardContent